# -*- coding: utf-8 -*-
"""Codecraft task4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JAnvS0ko9oEQhtc_9rJN_xSRBjkWsDio
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from textblob import TextBlob
import re
from wordcloud import WordCloud
# Load the extracted CSV file
file_path = "/content/amazon.csv"  # Update this if needed
df = pd.read_csv(file_path)

# Display the first few rows
df.head()

# Ensure text column is in string format
df['review_content'] = df['review_content'].astype(str)

# Clean review content
def clean_text(text):
    text = re.sub(r"http\S+", "", text)  # remove URLs
    text = re.sub(r"[^A-Za-z0-9\s]", "", text)  # remove special characters
    text = text.lower()  # convert to lowercase
    return text

df['cleaned_review'] = df['review_content'].apply(clean_text)

# Get polarity and subjectivity
df['polarity'] = df['cleaned_review'].apply(lambda x: TextBlob(x).sentiment.polarity)
df['subjectivity'] = df['cleaned_review'].apply(lambda x: TextBlob(x).sentiment.subjectivity)

# Categorize sentiment
def classify_sentiment(polarity):
    if polarity > 0:
        return 'Positive'
    elif polarity < 0:
        return 'Negative'
    else:
        return 'Neutral'

df['sentiment'] = df['polarity'].apply(classify_sentiment)

# Bar plot of sentiment
plt.figure(figsize=(8,6))
sns.countplot(x='sentiment', data=df, palette='Set2')
plt.title('Sentiment Distribution')
plt.xlabel('Sentiment')
plt.ylabel('Number of Reviews')
plt.show()

# Top 10 most reviewed products
top_products = df['product_name'].value_counts().head(10).index

# Filter dataset
top_df = df[df['product_name'].isin(top_products)]

# Plot
plt.figure(figsize=(12, 6))
sns.countplot(x='product_name', hue='sentiment', data=top_df, palette='Set1')
plt.title('Sentiment Distribution for Top 10 Products')
plt.xlabel('Product Name')
plt.ylabel('Number of Reviews')
plt.xticks(rotation=75)
plt.legend(title='Sentiment')
plt.tight_layout()
plt.show()

# Word cloud for each sentiment
plt.figure(figsize=(18, 6))
for i, sentiment in enumerate(['Positive', 'Negative', 'Neutral']):
    text = " ".join(df[df['sentiment'] == sentiment]['cleaned_review'])
    wordcloud = WordCloud(width=600, height=400, background_color='white').generate(text)

    plt.subplot(1, 3, i + 1)
    plt.imshow(wordcloud, interpolation='bilinear')
    plt.axis('off')
    plt.title(f'{sentiment} Reviews')

plt.tight_layout()
plt.show()